their number of advanced Burien submit my medicines that play a special role in computational biology Sol recalled in computational biology what were aligning is sequences of nucleotides or sometimes proteins in our job is to take them two strings like this and produce an alignment like this
 so in biology this is important for a number of
 reasons we can be I'm finding regions in the in the genome we could be discovering functions of genes we could be looking for evolutionary things by comparing different species this is also important for assembling fragments of DNA sequencing we're going to be trying to assemble fragments we want to look for overlapping pieces will talk.
black pieces and find some matches between them and find that these two pieces match I'm and we're comparing individuals and looking for mutations finding places where there are similarities and differences
 I mean General in natural language processing we talk about distance string at a distance and then I'm headed distance to or minimizing distance and wear them Computing them weights for things in computational biology we are talking about similarities or maximizing similarities or ask me how similar to things are so we're trying to maximize something and we only talk about the scores rather than weights
 so interpretation biology the standard minimum at a distance Ogden that we've just looked at them is called needleman wunsch and I've shown you the
look for all the local alignments between these two strings a t c a t and a t t a m a t c
 Stampy fill in The Matrix I can start with zeros everywhere because we're doing local alignment.
 We see them too
 if we lend look for Regions cells that have a maximum distance to trace back from we see two of these cells
 so one of them
 corresponds to the alignment ATC 8280 that so we have four strings that match one mismatch so that's going to be distance of 3
 and the other one of the
over here corresponds to the alignment between ATC and ATC where we have three matching at a symbols
 those are some of the more advanced variance of a distance that we see in computational biology
the album here but it's the same the same thing that we saw before although in general we're just going to keep them will use D2 mean the cost of insertions and deletions and we'll have a little value for the substitution the positive or negative value of substituting things in general in biology will talk about a positive cost for things that match a positive value for things that match and a cost for things up for deletions and insertions
 but here's the needleman wunsch Matrix and noticed that as opposed to what we did in natural language processing in general and computational biology we put the origin at the upper left
 so what's let's first
it some very instead of important in computational biology so one is cases where it's possible to have unlimited gaps at the beginning and end of a string and this happens exactly. We have two Little Snips of DNA and we know that the endpoints of one might overlap with the ends of another but there might be something else going on in other places so I'm Yours one long sequins and here's another long sequence but it's just this piece of this sequence in this piece of this that might overlap so we don't want to penalize the fact that there's other things going on before here or after here so we like to modify the album so doesn't penalize gaps at the end
in fact I can be various different kinds of overlapping of this of this sort this might happen when we were when we were doing sequencing and we have overlapping weeds
or it might be that we're looking for a piece of a gene inside another piece and so we have a subset piece inside a larger piece
 so the variant of the dynamic programming algorithm that we use for overlap detection the overlap detection variant will just make a few small changes in the algorithm so first and we just change the initialization so that m
 it doesn't cost us anything to start from a long string and delete everything over insert everything so used to be that we had we had minus minus I stardy here and we had - J star.
here and we gotten rid of those because it's allowing ourselves to start at path at a random Point way out here in the intersection so we're we're allowing ourselves to start at zero cost here and not be penalized for not matching all these things up till here so we looking for again Edge overlaps
 and now then for our termination condition we're going to look for the them start from not from the upper right corner because we're allowing a match not to go all the way to the edge but go find the the place along the final column or the final row where we have the maximum value and will Trace back from there so in this case or maximum value is he
open this last column and will Trace back from there
 similar extension of the Emile minute lunch or the standard dynamic programming algorithm for string at a distance is the local alignment problem so here's the local alignment problem we have two strings
 acts of links m&y of links and we want to find to substrings who's similarity is maximum so imagine that hears X and here's why we'd like to add of this these two strings we'd like to find these two and B substance cccggg that's the largest I'm similar substring
 so it's it's very similar to
BM overload protection Grant we saw except not only do we allow ourselves not to to ignore previously on aligned sequences at the beginning and end but also anywhere so we can we can basically have our maximum alignment be somewhere in the middle as it is here
 so in order to in order to modify the needleman wunsch algorithm them to allow any kind of luck alignments this is the new version is now called the Smith Waterman algorithm and we're first going to allow as we did for the time overlap detection Burien that allow them the initialization conditions to be zero both for X and Y so we don't p.m.
ourselves for initial strings and now we're going to make one more modification which is that in each cell when we're looking at the possible and places we could come from to choose the alignment we're going to not only pick the maximum of the three previous cells are also going to add a maximum of 0 so we're going to let ourselves since in in biology were talking about maximizing similarity when things get very different ones but very negative score we just going to start all over again from zero allow myself to just throw away region align it all
the termination condition of the Smith Waterman algorithm depends on what we're looking for if we just want the best local alignment
check the place that's that's maximum in the entire array and will Trace back from there
 if we want all the local alignments that score greater than some threshold T then maybe we'll find someplace that's greater than T. And find all those places and Trace back all of them now this gets complicated by the fact that there can be overlapping local alignment so yours might have to alignments like this and that and it might be that they actually overlap tracing back so they can be some complications here if you want the best local lineman that texting much easier
 so here's an example of local alignment so let's let's imagine that we're we're we're getting one positive point every time two symbols match and a negative point for any deletion insertion and substitution and
