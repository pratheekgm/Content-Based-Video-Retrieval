at a distance can also be weighted why would we add weights to the computation of edit distance
 I think about taking applications in spell correction it's obvious that some letters are more likely to be Miss type than others while in biology because of the constraints of the subject matter some kinds of deletions insertions are more likely than others so for example and spelling there's a confusion Matrix for spelling errors so if you look at this confusion Matrix you can see that he is very likely to be confused with a or o a nice ovalles tend to be confused
 but it's very unlikely to come to confuse A and B so as are confused with ease and eyes and O's and use
they're the kind of spelling errors people make have system atticity to them so not just confusing vowels with vowels
 but also the fact of the keyboard means that you're likely to make errors either using the homologous finger on the other hand or using nearby keystrokes so the constraints of the domain in this case we're talking about the spelling of maybe I can buy a biology I got to make some added to some edits more likely than others
 so we got to represent this by modifying the algorithm slightly to add weights so in levenshtein-distance we have the cost of one for insertion one for deletion and two for substitution and waited Minima to since we simply add a special cost of you look up each time so initialization instead of just adding one for each deletion we have the actual cost of each day
and we add up the deletions of each of the symbols that we delete instead of having just one for insertion we have a cost for each insertion we add them all up and similarly in the recurrence relation we're going to add a special deletion insertion and substitution cost how much does it leak to delete that particular character insert that particular character and then we'll end up with the same termination condition so we'll just add separate look up tables that will tell us what the deletion insertion and substitution cost are for each symbol
 by the way where did the name dynamic-programming come from
 here's some quotes from Richard bellman's autobiography Bellman was the one who invented dynamic programming and amusingly he tells us that he came up with the name for them and really as a public relations move to make an algorithm sound excited
so this is the only be one of the first algorithms that was that was named them in a branding way to make an algorithm sound exciting
 so there is our in summer algorithm for weighted minimum at a distance
